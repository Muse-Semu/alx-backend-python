name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: messaging_app_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-html pytest-django
          pip install mysqlclient
          pip install -r messaging_app/requirements.txt

      - name: Set up Django settings for testing
        env:
          DATABASE_URL: mysql://root:root@localhost:3306/messaging_app_test
        run: |
          echo "DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.mysql',
                'NAME': 'messaging_app_test',
                'USER': 'root',
                'PASSWORD': 'root',
                'HOST': '127.0.0.1',
                'PORT': '3306',
            }
          }" > messaging_app/messaging_app/test_settings.py

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: messaging_app.test_settings
        run: |
          pytest messaging_app/tests/ --html=report.html --self-contained-html

      - name: Archive test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: report.html